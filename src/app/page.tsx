import Header from "@/components/ Blogs";

import BentoCard, {
  BentoContainer,
  BentoFlavicon,
  BentoImage,
  BentoSubtitle,
  BentoText,
  BentoTitle,
  BentoToolTip,
} from "@/components/BentoCard";
import { ModeToggle } from "@/components/ThemeToggle";
import { Card, CardContent } from "@/components/ui/card";
import {
  Carousel,
  CarouselContent,
  CarouselItem,
  CarouselNext,
  CarouselPrevious,
} from "@/components/ui/carousel";
import { fetchData } from "@/lib/datafetch/getHome";
import { getAutogeneratedPublicationOG } from "@/lib/social/og";
import { Github } from "lucide-react";
import Image from "next/image";
import Link from "next/link";
import Posts from "./blogs/page";
import LoadMore from "@/components/LoadMore";

// showcase all links first
//
// show posts

export async function generateMetadata() {
  const staticdata = await fetchData();

  const publication = staticdata.data.publication;

  return {
    title: publication.title,

    description:
      publication.descriptionSEO ||
      publication.title ||
      `${publication.author.name}'s Blog`,
    openGraph: {
      title: publication.title,
      description: publication.descriptionSEO,

      authors: [publication.author.name],
      images: publication.ogMetaData.image,
      locale: "en_US",
      type: "website",
    },

    twitter: {
      title: publication.displayTitle || publication.title,
      description:
        publication.descriptionSEO ||
        publication.title ||
        `${publication.author.name}'s Blog`,
      card: "summary_large_image",
      images: {
        url:
          publication.ogMetaData.image ||
          getAutogeneratedPublicationOG(publication),
        alt: publication.displayTitle || publication.title,
      },
    },
    icons: {
      icon: publication.favicon,
    },
  };
}

const SmallBento = ({
  value,
  link,
  username,
  type,
}: {
  value?: string;
  link?: string;
  username?: string;
  type?: any;
}) => {
  return (
    <BentoCard isLink href={link} type="small">
      <BentoContainer type="small">
        <BentoFlavicon icon={type} />
        <BentoTitle>{value}</BentoTitle>
        <BentoSubtitle>{username}</BentoSubtitle>
      </BentoContainer>
    </BentoCard>
  );
};

export default async function Home() {
  const staticdata = await fetchData();

  const links = staticdata.data.publication.links;
  console.log(links);
  return (
    <div className="flex w-full flex-row gap-20 lg:gap-0 justify-between  md:justify-around  items-start    max-md:flex-col max-md:items-center ">
      <div className=" mr-28 max-md:mr-0  relative  lg:sticky lg:h-screen top-24 max-lg:justify-start max-w-[320px] max-h-[500px]  justify-center items-center flex">
        <Header staticdata={staticdata} />
      </div>

      <div className=" flex flex-col max-w-[720px]  text-left   py-24 ">
        <div className="flex flex-wrap gap-5">
          {Object.entries(links).map(([key, value]) => (
            <SmallBento
              key={key}
              value={key}
              link={(value as string) || ""}
              type={key}
            />
          ))}
        </div>

        <Link
          href={"#projects"}
          className="my-10 font-semibold text-2xl items-center flex gap-1"
        >
          <div className="font-sm text-neutral-500">{"##  "}</div>
          Writings
        </Link>

        <div className="flex flex-wrap gap-2">
          {staticdata.data.publication.posts.edges.map((e: any) => {
            return (
              <BentoCard
                type="large"
                key={e.node.id}
                isLink
                href={"/blogs/" + e.node.slug}
              >
                <BentoContainer type="large">
                  <div className="flex flex-col min-h-full gap-3 justify-between ">
                    <div className="flex flex-col gap-2">
                      <div className="text-black dark:text-neutral-200">
                        {e.node.title}
                      </div>
                      <div className="text-neutral-600 text-md font-normal dark:text-neutral-200">
                        {e.node.subtitle}
                      </div>
                      <div className=" text-neutral-400 font-normal dark:text-white"></div>
                    </div>
                    <BentoImage
                      type="large"
                      src={e.node.coverImage.url}
                      alt={e.node.title}
                    >
                      <BentoToolTip type="small">
                        {e.node.readTimeInMinutes} mins
                      </BentoToolTip>
                    </BentoImage>
                  </div>
                </BentoContainer>
              </BentoCard>
            );
          })}

          <LoadMore
            initialPageInfo={staticdata.data.publication.posts.pageInfo}
          />
        </div>

        {/* 
        <div className="flex gap-[20px]  flex-col md:flex-row justify-center md:justify-normal items-center">
          <BentoCard
            type="vertical"
            className="relative"
            rounded={true}
            border="1px solid #eee"
          >
            <div className="absolute bottom-0 left-0 right-0 top-0 bg-[radial-gradient(circle_800px_at_100%_200px,#d5c5ff,transparent)]"></div>
          </BentoCard>
          <div className="flex flex-col gap-[20px]">
            <BentoCard
              type="long"
              className="relative"
              rounded={true}
              border="1px solid #eee"
            >
              <div className="absolute bottom-0 left-0 right-0 top-0 rotate-180 transform bg-white bg-[radial-gradient(60%_120%_at_50%_50%,hsla(0,0%,100%,0)_0,rgba(252,205,238,.5)_100%)]"></div>
            </BentoCard>
            <div className="flex gap-5">
              <BentoCard
                type="small"
                className="relative"
                rounded={true}
                border="1px solid #eee"
              >
                <div className="absolute bottom-0 left-0 right-0 top-0  bg-[rgba(173,109,244,0.5)] "></div>
              </BentoCard>
              <BentoCard
                type="small"
                className="relative"
                rounded={true}
                border="1px solid #eee"
              >
                <div className="absolute bottom-0 left-0 right-0 top-0 rotate-180 transform bg-white bg-[radial-gradient(60%_120%_at_50%_50%,hsla(0,0%,100%,0)_0,rgba(252,205,38,.5)_100%)]"></div>
              </BentoCard>
            </div>

            <BentoCard
              type="long"
              className="relative"
              rounded={true}
              border="1px solid #eee"
            >
              <div className="absolute bottom-0 left-0 right-0 top-0 rotate-180 transform bg-white bg-[radial-gradient(60%_120%_at_50%_50%,hsla(0,0%,100%,0)_0,rgba(252,205,238,.5)_100%)]"></div>
            </BentoCard>
          </div>
        </div> */}
      </div>
    </div>
  );
}
